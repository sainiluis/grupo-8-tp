*- Prueba de casos de compilación exitosa -*

*- Inicializacion de variables -*

init {
    a, b,c,d,x : Int
    a2, b2, var1, base : String
    a3 : Int
    a4 : Float
}

a := 10
a3 := 10


*- if simple-*

si (a > b)
{
    a := 4
}

*- if con else -*

si (a > a3)
{
    escribir("a es mayor que a3")
} sino {
    escribir("a es menor o igual que a3")
}

si (NOT a > b )
{
    
    escribir("prueba")
    
}

*- if con AND -*

si (a > b AND c > b)
{
    
    escribir("prueba")
    
}

*- if con OR  -*

si (a > b OR c > b)
{
    
    escribir("prueba")
    
}

*- Asignaciones  -*

a4 := 99999.99
a4 := 99.
a4 := .9999



*- Bucle while -*

a:=1

mientras(a > 3) 
{
   escribir("a es menor que 3")
}

*- Funcion escribir y leer -*

escribir("ewr")

*- Comentario -*

*- Comentario 
	con 
mutliples
	lineas -*

*- Funcion UntilLoop -*
x := 0
*- UntilLoop(11>x, x=3+x) -*

*- Funcion aplicarDescuento -*
*- aplicarDescuento(28, [500, 305, 79.4, 10], 3) -*

*- Prueba de casos de compilacion con error -*
*- Descomentar cada caso para probar -*

*- Int fuera de rango -*
*- a3 := 999999999 -*

a:=1

*- Float fuera de rango -*
*-c := 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999.9999999999999999999999999999-*

*- String con más caracteres de los permitidos -*
*- base := "este es un string con mas de cuarenta caracteres" -*

*- Asignacion de una variable que no ha sido inicializada -*
*-nuevaVariable := "test" -*

*- Funcion aplicarDescuento con lista vacia -*
*- aplicarDescuento(27.5, [], 3) -*

*- Funcion aplicarDescuento con indice mayor a la cantidad de elementos de la lista -*
*- aplicarDescuento(27.5, [500, 305], 5) -*


